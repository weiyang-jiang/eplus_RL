<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="StockTick" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={2, 31, 1213, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[979, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.2954651335079255">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{290.9969432353976, 180.56598409558228}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This model uses a StockTick accessor to read the stock values&#10;of the publicly-held sponsors of the TerraSwarm project.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-85.0, 30.0]">
        </property>
    </property>
    <property name="stocks" class="ptolemy.data.expr.Parameter" value="{&quot;AMAT&quot;,&quot;IBM&quot;, &quot;INTC&quot;, &quot;MU&quot;, &quot;RTN&quot;, &quot;TXN&quot;, &quot;UTX&quot;}">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{30.0, -10.0}">
        </property>
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-30.0, 10.0}">
        </property>
    </property>
    <property name="SynchronizeToRealTime" class="ptolemy.actor.lib.SynchronizeToRealTime">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[415.0, 15.0]">
        </property>
    </property>
    <property name="_layoutConfiguration" class="ptolemy.vergil.basic.layout.ActorLayoutConfiguration">
        <property name="spacing" class="ptolemy.actor.parameters.DoubleRangeParameter" value="2.0">
            <display name="Object spacing"/>
        </property>
        <property name="logAspectRatio" class="ptolemy.actor.parameters.DoubleRangeParameter" value="-0.56">
            <display name="Aspect ratio"/>
        </property>
    </property>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1034, 621, 139, 176}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[139, 132]">
        </property>
        <property name="rowsDisplayed" class="ptolemy.data.expr.Parameter" value="8">
        </property>
        <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="10">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[635.0, 130.0]">
        </property>
    </entity>
    <entity name="Expression" class="ptolemy.actor.lib.Expression">
        <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="symbol + &quot;: &quot; + price">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
            <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[515.0, 130.0]">
        </property>
        <port name="symbol" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="price" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={369, 614, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[385.0, 230.0]">
        </property>
    </entity>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="5.0">
        </property>
        <property name="values" class="ptolemy.data.expr.Parameter" value="{true}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-25.0, 120.0]">
        </property>
    </entity>
    <entity name="Const" class="ptolemy.actor.lib.Const">
        <property name="value" class="ptolemy.data.expr.Parameter" value="stocks">
        </property>
        <doc>Create a constant sequence.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[80.0, 120.0]">
        </property>
    </entity>
    <entity name="ArrayToSequence" class="ptolemy.domains.sdf.lib.ArrayToSequence">
        <property name="enforceArrayLength" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[165.0, 120.0]">
        </property>
    </entity>
    <entity name="StockTick" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2014-2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** Retrieve a stock price from a Yahoo server.&#10; *  This accessor reacts to a *symbol* input by issuing a query to a web server&#10; *  for the most recent trade prices of the common stock whose symbol is given&#10; *  by the input. When the server replies, this accessor produces the most&#10; *  recent trade price on the *price* output.&#10; *&#10; *  This accessor does not block waiting for the response, but if any additional&#10; *  *symbol* input is received before a pending request has received a response&#10; *  or timed out, then the new request will be queued and sent out only after&#10; *  the pending request has completed. This strategy ensures that outputs are&#10; *  produced in the same order as the input requests.&#10; *&#10; *  This accessor requires the optional 'httpClient' module, which may or may&#10; *  not be provided by an accessor host. Most hosts will provide this module.&#10; *&#10; *  @accessor services/StockTick&#10; *  @author Edward A. Lee (eal@eecs.berkeley.edu)&#10; *  @version $$Id: StockTick.xml 74391 2016-01-31 22:04:05Z cxh $$&#10; *  @input {string} symbol The stock symbol. Default value is 'YHOO'.&#10; *  @output {number} price The most recent trade price for the stock.&#10; */&#10;&#10;// Stop extra messages from jslint and jshint.  Note that there should&#10;// be no space between the / and the * and global. See&#10;// https://chess.eecs.berkeley.edu/ptexternal/wiki/Main/JSHint */&#10;/*globals addInputHandler, get, error, exports, extend, get, input, output, parameter, require, send */&#10;/*jshint globalstrict: true*/&#10;'use strict';&#10;&#10;var http = require('httpClient');&#10;&#10;/** Set up the accessor by defining the inputs and outputs.&#10; */&#10;exports.setup = function() {&#10;    this.extend('net/REST');&#10;    this.input('symbol', {&#10;        'value':'YHOO',&#10;        'type':'string'&#10;    });&#10;    this.output('price', {&#10;        'type':'number'&#10;    });&#10;    // Change default values of the base class inputs.&#10;    // Also, hide base class inputs, except trigger.&#10;    this.input('options', {'visibility':'expert', 'value':'&quot;http://query.yahooapis.com&quot;'});&#10;    this.input('command', {'visibility':'expert', 'value':'/v1/public/yql'});&#10;    this.input('arguments', {'visibility':'expert', 'value':'{&quot;env&quot;:&quot;http://datatables.org/alltables.env&quot;, &quot;format&quot;:&quot;json&quot;}'});&#10;    this.input('body', {'visibility':'expert'});&#10;    this.input('trigger', {'visibility':'expert'});&#10;    this.output('headers', {'visibility':'expert'});&#10;    this.output('status', {'visibility':'expert'});&#10;    this.parameter('outputCompleteResponsesOnly', {'visibility':'expert'});&#10;};&#10;&#10;/** Initialize the accessor by attaching an input handler to the *symbol* input. */&#10;exports.initialize = function() {&#10;    // Be sure to call the superclass so that the trigger input handler gets registered.&#10;    this.exports.ssuper.initialize.call(this);&#10;    &#10;    // Capture 'this' for use in callback.&#10;    var self = this;&#10;&#10;    // Invoke the getPrice function each time a 'symbol' input arrives.&#10;    this.addInputHandler('symbol', function() {&#10;        // Read the current value of the 'symbol' input.&#10;        var stock = self.get('symbol');        &#10;        var args = self.get('arguments');&#10;        args.q = 'select * from yahoo.finance.quotes where symbol in (&quot;' +&#10;            stock +&#10;            '&quot;)';&#10;        self.send('arguments', args);&#10;        self.send('trigger', true);&#10;    });&#10;};&#10;&#10;/** Filter the response, extracting the stock tick information and&#10; *  outputting it on the price output. The full response is produced&#10; *  on the 'response' output.&#10; */&#10;exports.filterResponse = function(response) {&#10;    if (response) {&#10;        try {&#10;        	// Check if response is JSON or stringified JSON.  If stringified, parse.&#10;        	var parsed;&#10;        	if (typeof response == &quot;object&quot;) {&#10;        		parsed = response;&#10;        	} else {&#10;        		parsed = JSON.parse(response);&#10;        	}&#10;&#10;           // Extract the last trade price from the JSON record.&#10;            var price = parseFloat(parsed.query.results.quote.LastTradePriceOnly);&#10;            // Send the price to the 'price' output.&#10;            this.send('price', price);&#10;        } catch (err) {&#10;            error('StockTick: Unable to parse response: ' + err.message);&#10;            this.send('price', null);&#10;        }&#10;    } else {&#10;        this.send('price', null);&#10;    }&#10;    return response;&#10;};&#10;">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://terraswarm.org/accessors/services/StockTick.js">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;Retrieve a stock price from a Yahoo server.&#10; This accessor reacts to a &lt;em&gt;symbol&lt;/em&gt; input by issuing a query to a web server&#10; for the most recent trade prices of the common stock whose symbol is given&#10; by the input. When the server replies, this accessor produces the most&#10; recent trade price on the &lt;em&gt;price&lt;/em&gt; output.&lt;/p&gt;&#10;&lt;p&gt; This accessor does not block waiting for the response, but if any additional&#10; &lt;em&gt;symbol&lt;/em&gt; input is received before a pending request has received a response&#10; or timed out, then the new request will be queued and sent out only after&#10; the pending request has completed. This strategy ensures that outputs are&#10; produced in the same order as the input requests.&lt;/p&gt;&#10;&lt;p&gt; This accessor requires the optional 'httpClient' module, which may or may&#10; not be provided by an accessor host. Most hosts will provide this module.&lt;/p&gt;">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee (eal@eecs.berkeley.edu)">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="$$Id: StockTick.xml 74391 2016-01-31 22:04:05Z cxh $$">
            </property>
            <property name="symbol (port)" class="ptolemy.kernel.util.StringAttribute" value="The stock symbol. Default value is 'YHOO'.">
            </property>
            <property name="price (port)" class="ptolemy.kernel.util.StringAttribute" value="The most recent trade price for the stock.">
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="options" class="ptolemy.actor.parameters.PortParameter" value="&quot;http://query.yahooapis.com&quot;">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="command" class="ptolemy.actor.parameters.PortParameter" value="/v1/public/yql">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="arguments" class="ptolemy.actor.parameters.PortParameter" value="{&quot;env&quot;:&quot;http://datatables.org/alltables.env&quot;, &quot;format&quot;:&quot;json&quot;}">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="symbol" class="ptolemy.actor.parameters.PortParameter" value="YHOO">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="outputCompleteResponsesOnly" class="ptolemy.data.expr.Parameter">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[310.0, 160.0]">
        </property>
        <property name="timeout" class="ptolemy.data.expr.Parameter" value="5000">
        </property>
        <port name="options" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </port>
        <port name="command" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="arguments" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </port>
        <port name="symbol" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="body" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="response" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
        <port name="status" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
        <port name="headers" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
        <port name="price" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[230.0, 120.0]">
        </vertex>
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="Display.input" relation="relation2"/>
    <link port="Expression.output" relation="relation2"/>
    <link port="Expression.symbol" relation="relation3"/>
    <link port="Expression.price" relation="relation5"/>
    <link port="Display2.input" relation="relation4"/>
    <link port="DiscreteClock.output" relation="relation7"/>
    <link port="Const.output" relation="relation6"/>
    <link port="Const.trigger" relation="relation7"/>
    <link port="ArrayToSequence.input" relation="relation6"/>
    <link port="ArrayToSequence.output" relation="relation3"/>
    <link port="StockTick.error" relation="relation4"/>
    <link port="StockTick.symbol" relation="relation3"/>
    <link port="StockTick.price" relation="relation5"/>
</entity>
