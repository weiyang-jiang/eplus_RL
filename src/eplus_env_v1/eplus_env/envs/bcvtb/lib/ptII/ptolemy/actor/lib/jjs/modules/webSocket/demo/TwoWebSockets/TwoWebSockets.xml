<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="TwoWebSockets" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-85.0, -90.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={23, 23, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{167.68073219476742, 84.81646075581395}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To run the servers for this demo, you will need to have 'ws', a node.js &#10;websocket library installed. You can install this with the following command.&#10;  sudo npm install ws&#10;&#10;Creates two websockets with a JavaScript module 'webSocket'.&#10;Every second, these two websockets send messages to two websocket servers&#10;running on node.js, and then receive messages from those servers.&#10;&#10;You can run the two servers with following commands within the same directory&#10;where this demo resides:&#10;  node Server1.js &amp;&#10;  node Server2.js &amp;&#10;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-140.0, 65.0}">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,0.6,0.6,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Hokeun Kim">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-145.0, 295.0]">
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This demo shows a single client connecting to two external web servers&#10;implemented with some other technology (Node.js in this case).">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -125.0]">
        </property>
    </property>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-85.0, -10.0]">
        </property>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={835, 283, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[180.0, -10.0]">
        </property>
    </entity>
    <entity name="JavaScript" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var WebSocket = require('webSocketClient');&#10;&#10;var ws1 = null;&#10;var ws2 = null;&#10;var count1 = 0;&#10;var count2 = 0;&#10;&#10;exports.setup = function() {&#10;	this.input('trigger');&#10;	this.output('output', {type: 'string'});&#10;}&#10;&#10;exports.initialize = function() {&#10;  count1 = 0;&#10;  count2 = 0;&#10;  if (ws1 == null) {&#10;    ws1 = new WebSocket.Client({'host':'localhost', 'port':8080,&#10;               'sendType': 'text/plain', 'receiveType': 'text/plain'});&#10;    ws1.on('open', onOpen1.bind(this));&#10;    ws1.on('message', onMessage1.bind(this));&#10;    ws1.open();&#10;  }&#10;  if (ws2 == null) {&#10;    ws2 = new WebSocket.Client({'host':'localhost', 'port':1984,&#10;               'sendType': 'text/plain', 'receiveType': 'text/plain'}); &#10;    ws2.on('open', onOpen2.bind(this));  &#10;    ws2.on('message', onMessage2.bind(this));&#10;    ws2.open();&#10;  }&#10;  count1 = 0;&#10;  count2 = 0;&#10;  this.addInputHandler('trigger', onInput);&#10;}&#10;&#10;function onOpen1() {&#10;  console.log('Connection to server 1 opened.');&#10;}&#10;&#10;function onOpen2() {&#10;  console.log('Connection to server 1 opened.');&#10;}&#10;&#10;function onMessage1(data) {&#10;  this.send('output', 'Socket 1 received: ' + data);&#10;}&#10;&#10;function onMessage2(data) {&#10;  this.send('output', 'Socket 2 received: ' + data);&#10;}&#10;&#10;function onInput() {&#10;  count1++;&#10;  count2++;&#10;  ws1.send('Hi, I am ws1. Count: ' + count1);&#10;  ws2.send('Hi, I am ws2. Count: ' + count2);&#10;}&#10;&#10;exports.wrapup = function() {&#10;  if (ws1 == null) {&#10;    ws1.close();&#10;    ws1 = null;&#10;  }&#10;  if (ws2 == null) {&#10;    ws2.close();&#10;    ws2 = null;&#10;  }&#10;}&#10;">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[35.0, -10.0]">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DiscreteClock.output" relation="relation3"/>
    <link port="Display.input" relation="relation"/>
    <link port="JavaScript.trigger" relation="relation3"/>
    <link port="JavaScript.output" relation="relation"/>
</entity>
