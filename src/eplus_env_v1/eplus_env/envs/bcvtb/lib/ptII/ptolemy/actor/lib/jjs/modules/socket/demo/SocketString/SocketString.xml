<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="SocketString" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={65, 24, 884, 641}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[650, 531]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.2127613283995273">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{135.86065626144412, 171.98070611283185}">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="5.0">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-75.0, -15.0}">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This demo sends a sequence of strings&#10;to the server. Parameters are set so that&#10;any strings sent before the&#10;server is listening will be discarded.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-10.0, -45.0}">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="The sequence&#10;of strings sent is:&#10;  a&#10;  aa&#10;  aaa&#10;  aaaa&#10;  ...&#10;Most likely, the&#10;first is discarded.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[275.0, 25.0]">
        </property>
    </property>
    <entity name="Client" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var socket = require('socket');&#10;&#10;exports.setup = function() {&#10;	this.input('toSend');&#10;}&#10;&#10;exports.initialize = function() {&#10;	var client = new socket.SocketClient(4000, 'localhost',&#10;		{'discardMessagesBeforeOpen':true}&#10;	);&#10;	var self = this;&#10;	this.addInputHandler('toSend', function() {&#10;		var data = self.get('toSend');&#10;		client.send(data);&#10;	});&#10;	client.open();&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{235.0, 80.0}">
        </property>
        <port name="toSend" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
    </entity>
    <entity name="Server" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var socket = require('socket');&#10;&#10;exports.setup = function() {&#10;	this.output('listening');&#10;	this.output('connected');&#10;	this.output('received');&#10;	this.input('start');&#10;}&#10;&#10;var server = null;&#10;var connectionCount = 0;&#10;&#10;exports.initialize = function() {&#10;	var self = this;&#10;	this.addInputHandler('start', function() {&#10;		server = new socket.SocketServer();&#10;		server.on('listening', function(port) {&#10;			self.send('listening', port);&#10;		});&#10;		server.on('connection', function(serverSocket) {&#10;			connectionCount++;&#10;			self.send('connected', connectionCount);&#10;			serverSocket.on('data', function(data) {&#10;				self.send('received', data);&#10;			});&#10;		});&#10;		server.start();&#10;	});&#10;}&#10;&#10;exports.wrapup = function() {&#10;	if (server) {&#10;		server.stop();&#10;	}&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{30.0, 195.0}">
        </property>
        <port name="listening" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
        <port name="connected" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
        <port name="received" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
        <port name="start" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
    </entity>
    <entity name="ServerErrors" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={530, 510, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{180.0, 355.0}">
        </property>
    </entity>
    <entity name="ServerReceived" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={907, 445, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{180.0, 295.0}">
        </property>
    </entity>
    <entity name="ServerConnected" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={906, 233, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{180.0, 240.0}">
        </property>
    </entity>
    <entity name="ListeningPort" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={906, 23, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{180.0, 185.0}">
        </property>
    </entity>
    <entity name="SingleEvent" class="ptolemy.actor.lib.SingleEvent">
        <property name="time" class="ptolemy.data.expr.Parameter" value="0.5">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-95.0, 195.0}">
        </property>
    </entity>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.Clock">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-60.0, 70.0}">
        </property>
    </entity>
    <entity name="Ramp" class="ptolemy.actor.lib.Ramp">
        <property name="init" class="ptolemy.actor.parameters.PortParameter" value="&quot;a&quot;">
        </property>
        <property name="step" class="ptolemy.actor.parameters.PortParameter" value="&quot;a&quot;">
        </property>
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{100.0, 80.0}">
        </property>
    </entity>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Server.error&quot;,x=30.0,y=195.0}, tail={id=&quot;ServerErrors.input&quot;,x=180.0,y=355.0}, points={20.0,355.0} } }">
        </property>
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Server.connected&quot;,x=30.0,y=195.0}, tail={id=&quot;ServerConnected.input&quot;,x=180.0,y=240.0}, points={130.0,195.0,130.0,240.0} } }">
        </property>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Server.start&quot;,x=30.0,y=195.0}, tail={id=&quot;SingleEvent.output&quot;,x=-95.0,y=195.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;DiscreteClock.output&quot;,x=-60.0,y=70.0}, tail={id=&quot;Ramp.trigger&quot;,x=100.0,y=80.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Client.toSend&quot;,x=235.0,y=80.0}, tail={id=&quot;Ramp.output&quot;,x=100.0,y=80.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Server.listening&quot;,x=30.0,y=195.0}, tail={id=&quot;ListeningPort.input&quot;,x=180.0,y=185.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Server.received&quot;,x=30.0,y=195.0}, tail={id=&quot;ServerReceived.input&quot;,x=180.0,y=295.0}, points={115.0,205.0,115.0,295.0} } }">
        </property>
    </relation>
    <link port="Client.toSend" relation="relation2"/>
    <link port="Server.error" relation="relation4"/>
    <link port="Server.listening" relation="relation7"/>
    <link port="Server.connected" relation="relation6"/>
    <link port="Server.received" relation="relation5"/>
    <link port="Server.start" relation="relation"/>
    <link port="ServerErrors.input" relation="relation4"/>
    <link port="ServerReceived.input" relation="relation5"/>
    <link port="ServerConnected.input" relation="relation6"/>
    <link port="ListeningPort.input" relation="relation7"/>
    <link port="SingleEvent.output" relation="relation"/>
    <link port="DiscreteClock.output" relation="relation3"/>
    <link port="Ramp.output" relation="relation2"/>
    <link port="Ramp.trigger" relation="relation3"/>
</entity>
