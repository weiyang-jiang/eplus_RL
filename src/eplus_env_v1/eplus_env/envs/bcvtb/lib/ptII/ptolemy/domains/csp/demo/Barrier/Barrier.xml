<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="Barrier" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="8.1.devel">
    </property>
    <property name="CSP Director" class="ptolemy.domains.csp.kernel.CSPDirector">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[65.0, 40.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={4, 22, 928, 512}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[715, 402]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{357.5, 201.0}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This model illustrates a design pattern with CSP&#10;called a &quot;barrier synchronization.&quot; In this example,&#10;the two Ramps are sending increasing sequences of&#10;integers to the Displays. However, the transfer&#10;is constrained to occur only when the Barrier actor&#10;reads inputs. Thus, a multi-way rendezvous between the&#10;two Ramp actors, the two Display actors, and the Barrier&#10;actor constrains the two transfers to the Display actors&#10;to occur simultaneously.  The Barrier actor, after&#10;reading inputs, will rendezvous with the Sleep actor&#10;connected to its output.  This sleep actor will sleep&#10;a random amount of time after reading its input, and&#10;during that time will not accept additional inputs.&#10;Thus, after the first two transfers to the Display&#10;actors (why two?) the time between transfers is&#10;controlled by the Sleep actor.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 70.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.4,0.4,0.4,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Edward A. Lee">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 375.0]">
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="12">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Random wait time.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 365.0]">
        </property>
    </property>
    <property name="Annotation4" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="12">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Relation results&#10;in multi-way&#10;rendezvous.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 55.0]">
        </property>
    </property>
    <property name="Annotation5" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="18">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.2,0.2,0.2,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Illustration of Barrier Synchronization in CSP">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[130.0, 15.0]">
        </property>
    </property>
    <entity name="Ramp" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[455.0, 110.0]">
        </property>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={875, 4, 150, 227}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[615.0, 110.0]">
        </property>
    </entity>
    <entity name="Sleep" class="ptolemy.actor.lib.Sleep">
        <property name="sleepTime" class="ptolemy.actor.parameters.PortParameter" value="0L">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="sleepTime">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="40">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[640.0, 285.0]">
        </property>
    </entity>
    <entity name="Uniform" class="ptolemy.actor.lib.Uniform">
        <property name="lowerBound" class="ptolemy.actor.parameters.PortParameter" value="0.0">
        </property>
        <property name="upperBound" class="ptolemy.actor.parameters.PortParameter" value="2000.0">
        </property>
        <property name="UniformIcon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={104, 125, 815, 518}, maximized=false}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
            </property>
        </property>
        <doc>Create a sequence of uniformly distributed random numbers</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[465.0, 365.0]">
        </property>
    </entity>
    <entity name="Round" class="ptolemy.actor.lib.conversions.Round">
        <property name="function" class="ptolemy.kernel.util.StringAttribute" value="round">
            <property name="style" class="ptolemy.actor.gui.style.ChoiceStyle">
                <property name="ceil" class="ptolemy.kernel.util.StringAttribute" value="ceil">
                </property>
                <property name="floor" class="ptolemy.kernel.util.StringAttribute" value="floor">
                </property>
                <property name="round" class="ptolemy.kernel.util.StringAttribute" value="round">
                </property>
                <property name="truncate" class="ptolemy.kernel.util.StringAttribute" value="truncate">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, 365.0]">
        </property>
    </entity>
    <entity name="Barrier" class="ptolemy.domains.csp.lib.Barrier">
        <property name="BarrierIcon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={104, 125, 815, 518}, maximized=false}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[560.0, 285.0]">
        </property>
    </entity>
    <entity name="Ramp2" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[455.0, 180.0]">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={873, 231, 150, 227}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[615.0, 180.0]">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="[505.0, 110.0]">
        </vertex>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="[515.0, 180.0]">
        </vertex>
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="Ramp.output" relation="relation2"/>
    <link port="Display.input" relation="relation2"/>
    <link port="Sleep.input" relation="relation4"/>
    <link port="Sleep.sleepTime" relation="relation"/>
    <link port="Uniform.output" relation="relation3"/>
    <link port="Round.input" relation="relation3"/>
    <link port="Round.output" relation="relation"/>
    <link port="Barrier.input" relation="relation5"/>
    <link port="Barrier.input" relation="relation2"/>
    <link port="Barrier.output" relation="relation4"/>
    <link port="Ramp2.output" relation="relation5"/>
    <link port="Display2.input" relation="relation5"/>
</entity>
