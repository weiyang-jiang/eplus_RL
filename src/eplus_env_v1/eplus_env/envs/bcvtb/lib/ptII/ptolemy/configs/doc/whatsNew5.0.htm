<html>
<head>
<!-- $Id: whatsNew5.0.htm 70198 2014-09-25 18:47:42Z cxh $ -->
<!--

This file has pointers to tours of what's new in version 5.0

The version number should match
ptolemy.kernel.attributes.VersionAttribute.CURRENT_VERSION
so that we can easily find and update the version number

-->
<link href="../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>
Tour of What's New in Version 5.0
</h1>
See also <a href="whatsNew.htm">What's New in other versions</a>.

<p>Contents:
<ul>
<li> <a href="#highlights">Highlights</a>
<li> <a href="#other">Other Key New Capabilities</a>
<li> <a href="#libraries">New and Enhanced Actor Libraries</a>
<li> <a href="#demos">New demonstrations</a>
<li> <a href="#features">Additional features</a>
<li> <a href="#bugs">Bug fixes</a>
</ul>

<h2> <a name="highlights">Highlights</a>
</h2>
<ul>
<li> <i>Dynamic Dataflow</i>:
<a href="../../domains/ddf/demo/HanoiTower/HanoiTower.xml">HanoiTower</a>
(see also
<a href="../../domains/ddf/demo/Eratosthenes/Eratosthenes.xml">Eratosthenes</a>,
<a href="../../domains/ddf/demo/IfThenElse/IfThenElse.xml">IfThenElse</a>,
<a href="../../domains/ddf/demo/Loop/Loop.xml">Loop</a>,
<a href="../../domains/ddf/demo/OrderedMerge/OrderedMerge.xml">OrderedMerge</a>,
<a href="../../domains/ddf/demo/RandomWalk/RandomWalk.xml">RandomWalk</a>)
<br>
In dynamic dataflow (DDF) models, actors are fired in response to available
input data. The schedule is dynamic and data dependent, and actors can
change their production and consumption rates in each firing.
Unlike synchronous dataflow, the DDF model of computation is Turing
complete, and questions of deadlock and boundedness are undecidable.
The <a href="../../domains/ddf/demo/HanoiTower/HanoiTower.xml">HanoiTower</a>
example exploits this to give an algorithmic solution to the well-known
towers of Hanoi problem.

<br>
<li>
<i>Modeling of hybrid systems</i>:
<a href="../../domains/continuous/demo/NewtonsCradle/NewtonsCradleComplicated.xml">NewtonsCradleComplicated</a>.
(<i>In Ptolemy II 8.0, the continuous domain was created.  Between Ptolemy II 8.0 and 10.0, ct was removed.  The paths to the demos has been updated from domains/ct to domains/continuous.</i>)
<br>
<i>Hybrid systems</i> are a special case of modal models
where finite-state machines (FSMs) are combined with the continuous-time (CT) models
to get mixed continuous-time and discrete-event models.
The <a href="../hyvisual/intro.htm">HyVisual</a> package
is a subset of Ptolemy II that includes the FSM and CT domains and libraries
that support the design of hybrid systems.
Version 5.0 introduces significant rework of the hybrid systems
modeling infrastructure to have more complete and predictable
semantics, as described in the paper
"<a href="http://ptolemy.eecs.berkeley.edu/publications/papers/05/OperationalSemantics/#in_browser" target="_top">
Operational Semantics of Hybrid Systems</a>".
The
<a href="../../domains/continuous/demo/NewtonsCradle/NewtonsCradleComplicated.xml">NewtonsCradleComplicated</a>
example illustrates this with a model of a physical system that has simultaneous
events.
(<i>In Ptolemy II 8.0, the continuous domain was created.  Between Ptolemy II 8.0 and 10.0, ct was removed.  The paths to the demos has been updated from domains/ct to domains/continuous.</i>)
<br>
<li><i>Stochastic hybrid systems</i>:
$PTII/ptolemy/domains/ct/demo/Spontaneous/IncreasingRatePoisson.xml (<i>Removed by Ptolemy II 10.0</i>)
(see also
<a href="../../domains/continuous/demo/Hysteresis/HysteresisWithRandomDelay.xml">HysteresisWithRandomDelay</a>,
<a href="../../domains/continuous/demo/Brownian/Brownian.xml">Brownian</a>
).
<br>
Stochastic hybrid systems add random behavior to continuous-time models mixed
with discrete events. The 
$PTII/ptolemy/domains/ct/demo/Spontaneous/IncreasingRatePoisson.xml (<i>Removed by Ptolemy II 10.0</i>)
models spontaneous mode transitions governed by a Poisson process.
The <a href="../../domains/continuous/demo/Hysteresis/HysteresisWithRandomDelay.xml">HysteresisWithRandomDelay</a>
example uses similar spontaneous mode transitions to model random delay in mode transitions.
The <a href="../../domains/continuous/demo/Brownian/Brownian.xml">Brownian</a> example
models a stochastic differential equation describing a random walk process.
(<i>In Ptolemy II 8.0, the continuous domain was created.  Between Ptolemy II 8.0 and 10.0, ct was removed.  The paths to the demos have been updated from domains/ct to domains/continuous.</i>)

<br>
<li> <i>Heterochronous Dataflow</i>:
<a href="../../domains/hdf/demo/Fibonacci/Fibonacci.xml">Fibonacci</a>
(see also
<a href="../../domains/hdf/demo/Merge/Merge.xml">Merge</a>).
<br>
Heterochronous dataflow (HDF) is an extension of synchronous dataflow
(SDF) that permits dynamically changing production and consumption
patterns without sacrificing static scheduling. In SDF, the production
and consumption patterns of an actor are constant.
In HDF they are allowed to change between iterations of the HDF schedule.
Modal models can be used to change these patterns.
Although HDF can express many data-dependent computations that cannot
be represented by SDF, it is not Turing complete.  Consequently, deadlock
and boundedness remain decidable.
The <a href="../../domains/hdf/demo/Fibonacci/Fibonacci.xml">Fibonacci</a>
example uses this mechanism in a clever way to extract a Fibonacci sequence
from a counting sequence.

</ul>

<h2><a name="other">Other Key New Capabilities</a>
</h2>
<ul>

<li><i>Unbounded model time</i>:
<a href="../../domains/de/demo/LongRuns/LongRuns.xml">LongRuns</a>.
<br>
Version 5.0 introduces a new
<a href="../../../doc/codeDoc/ptolemy/actor/util/Time.html#in_browser">Time</a> class
that represents model time in a manner that has a specified resolution
and unbounded growth potential. Any two time values that are within the specified
resolution are treated as equal. Moreover, time can increase forever without
concern for loss of resolution or overflow.
The <a href="../../domains/de/demo/LongRuns/LongRuns.xml">LongRuns</a>
example is a discrete-event model that can be run forever, in principle,
without (significant) growth of memory requirements and without loss
of (internal) precision in model time.
The precision of time representations is given by a director parameter
whose value is shared across all directors in a model (see
<a href="../../../doc/codeDoc/ptolemy/actor/parameters/SharedParameter.html#in_browser">SharedParameter</a>).
(<i>Moved to ptolemy.actor.parameters after Ptolemy II 7.0</i>)
<br>

<li><i>Synchronous Reactive Modeling</i>:
<a href="../../domains/sr/demo/GuardedCount/GuardedCount.xml">GuardedCount</a>.
<br>
The synchronous/reactive (SR) domain,
which is inspired by the synchronous languages Esterel, Lustre, and Signal,
realizes a concurrency model where actors react instantaneously and simultaneously
at ticks of a logical clock. Version 5.0 introduces a richer set of actors
for use with this domain, as well as a bug fix permitting
SROptimizedScheduler to be used inside a composite actor.
The <a href="../../domains/sr/demo/GuardedCount/GuardedCount.xml">GuardedCount</a>
example illustrates some of these new capabilities.
The new actors are:
<ul>
 <li> <a href="../../../doc/codeDoc/ptolemy/domains/sr/lib/Current.html#in_browser">Current</a>
 <li> (Moved from sr/lib/Default to actor/lib/Default just before 10.0) Default
 <li> <a href="../../../doc/codeDoc/ptolemy/domains/sr/lib/EnabledComposite.html#in_browser">EnabledComposite</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/domains/sr/lib/Pre.html#in_browser">Pre</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/domains/sr/lib/When.html#in_browser">When</a>
</ul>

<li><i>Nondeterministic merge in Process Networks (PN)</i>:
<a href="../../domains/pn/demo/NondeterministicMerge/NondeterministicMerge.xml">NondeterministicMerge</a>.
<br>
The PN domain now supports a NondeterministicMerge actor, which merges two
incoming streams nondeterministically. This new actor should be used with
caution, since determinism is one of the key features of PN. Use of this
actor is risky because any given execution is only representative of
the possible executions. Nonetheless, this offers a considerable
increment in expressiveness.

<br>

<li><i>New Parameters</i>:
<br>
A number of new parameters have been introduced.
The <a href="../../../doc/codeDoc/ptolemy/actor/parameters/DoubleRangeParameter.html#in_browser">DoubleRangeParameter</a>
limits the range and precision of a double-valued parameter,
and is supported in the user interface by providing a slider by default in parameter
editing dialogs.
The <a href="../../../doc/codeDoc/ptolemy/actor/parameters/FilePortParameter.html#in_browser">FilePortParameter</a>
is used by actors to specify a file or URL using both a
parameter and a port. The user interface supports this by offering a file browser
dialog by default when editing this parameter. The
<a href="../../../doc/codeDoc/ptolemy/actor/parameters/SharedParameter.html#in_browser">SharedParameter</a>).
(<i>Moved to ptolemy.actor.parameters after Ptolemy II 7.0</i>)
is a parameter
whose value is constrained to be identical to a suite of other instances of
SharedParameter in the same model. This parameter is used, for example, to
handle seeds in random number generators, as illustrated for example in
<a href="../../actor/lib/colt/demo/ColtRandom/ColtRandom.xml">
ColtRandom</a>.

<br>
<li><i>Higher Order Components</i>:
<a href="../../demo/ExecDemos/ExecDemos.xml">ExecDemos</a>
(see also
<a href="../../actor/lib/hoc/demo/IterateOverArray/IterateOverArray.xml">IterateOverArray</a>).
<br>
The higher-order component capabilities of Ptolemy II continue to evolve.
The <a href="../../demo/ExecDemos/ExecDemos.xml">ExecDemos</a> model, when executed, starts a new
Java virtual machine that then executes the
<a href="../../demo/ExecDemos/RunDemos.xml">RunDemos</a> model,
which runs all demos in a specified directory using full-screen mode.
This illustrates how to use higher-order actors to control the lifecylcle of other Ptolemy II
models. This example can be set up to automatically and repeatedly run demos
unattended by following the instructions in the
<a href="../../demo/README.txt">README.txt</a> file.
The new higher-order actors include:
<ul>
 <!-- ../../../doc/codeDoc/ptolemy/actor/lib/hoc/ApplyFilterOverArray.html
is not yet ready -->
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/hoc/ApplyFunction.html#in_browser">ApplyFunction</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/hoc/ApplyFunctionOverSequence.html#in_browser">ApplyFunctionOverSequence</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/hoc/IterateOverArray.html#in_browser">IterateOverArray</a>
</ul>

<li> <i>Graphics domain</i>:
<a href="../../domains/gr/demo/SolarSystem/SolarSystem.xml">SolarSystem</a>
(see also <a href="../../domains/gr/demo/Helen/Helen.xml">Helen</a>).
<br>
The graphics (GR) domain has been extensively revised to take better advantage of underlying
capabilities in the Java 3D package. For example, the
<a href="../../domains/gr/demo/SolarSystem/SolarSystem.xml">SolarSystem</a>
model illustrates transparency (see the rings of Saturn), and the
<a href="../../domains/gr/demo/Helen/Helen.xml">Helen</a> model
illustrates texture mapping and movable viewer positioning.
The following capabilities are now supported:
<ul>
 <li>transparency
 <li>texture mapping
 <li>shininess
 <li>colors use ColorAttribute
 <li>more colors can be set
 <li>settable resolution
 <li>wireframe option for shapes
 <li>flat facets option for shapes
 <li>run-time changes of parameter values
 <li>parameters in the Text3D actor
 <li>movable viewer position
</ul>

</ul>

<h2><a name="libraries">New and Enhanced Actor Libraries</a>
</h2>
A number of new and enhanced actor libraries are included in version 5.0.
You may also wish to refer to the
<a href="../../../doc/codeDoc/ptolemy/actor/lib/package-summary.html#in_browser">ptolemy.actor.lib</a>
package, where most of the domain-polymorphic actors reside (domain-polymorphic actors are
those that can be used in more than one domain).

<ul>
<li><i>New generic actors</i>:
<ul>
<li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/Sequence.html#in_browser">Sequence</a>
</ul>

<li><i>Random number generators</i>:
<a href="../../actor/lib/colt/demo/ColtRandom/ColtRandom.xml">
ColtRandom</a>.
<br>
A new library of random number generators, developed jointly with
David Bauer and Kostas Oikonomou from AT&amp;T Research, is based on the popular
Colt "Open Source Libraries for High
Performance Scientific and Technical
Computing in Java."
Colt is described at
<a href="http://hoschek.home.cern.ch/hoschek/colt/#in_browser" target="_top">
<CODE>http://hoschek.home.cern.ch/hoschek/colt/</CODE></a>.
The library supports many
commonly used probability distributions and provides
systematic management of seeds and random number generation
techniques.

<br>
<li><i>New discrete-event actors</i>:
<ul>
<li> <a href="../../../doc/codeDoc/ptolemy/domains/de/lib/NonInterruptibleTimer.html#in_browser">NonInterruptibleTimer</a>
<li> <a href="../../../doc/codeDoc/ptolemy/domains/de/lib/Register.html#in_browser">Register</a>
</ul>

<li> <i>Communications library</i>:
<br>
The <a href="../../../doc/codeDoc/ptolemy/actor/lib/comm/package-summary.html#in_browser">communications library</a>
includes a number of new actors:
<ul>
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/comm/HuffmanCoder.html#in_browser">HuffmanCoder</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/comm/HuffmanDecoder.html#in_browser">HuffmanDecoder</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/comm/LempelZivCoder.html#in_browser">LempelZivCoder</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/comm/LempelZivDecoder.html#in_browser">LempelZivDecoder</a>
</ul>

</ul>

<h2> <a name="demos">New Demonstrations</a>
</h2>
<ul>
<li>New Continuous Time demos:
(<i>In Ptolemy II 8.0, the continuous domain was created.  Between Ptolemy II 8.0 and 10.0, ct was removed.  The paths to the demos have been updated from domains/ct to domains/continuous.</i>)
<ul>
<li> <a href="../../domains/continuous/demo/Brownian/Brownian.xml">Brownian</a> 
<li> $PTII/ptolemy/domains/ct/demo/ContinuousClock/ContinuousClock.xml (<i>Removed by Ptolemy II 10.0</i>)
<li> <a href="../../domains/continuous/demo/HierarchicalExecution/HierarchicalExecution.xml">Hierarchical Execution</a>
<li> <a href="../../domains/continuous/demo/Hysteresis/Hysteresis.xml">Hysteresis</a>
<li> <a href="../../domains/continuous/demo/Hysteresis/HysteresisWithRandomDelay.xml">HysteresisWithRandomDelay</a>
<li> <a href="../../domains/continuous/demo/Hysteresis/HysteresisWithRandomLosses.xml">HysteresisWithRandomLosses</a>
<li> $PTII/ptolemy/domains/ct/demo/Spontaneous/IncreasingRatePoisson.xml (<i>Removed by Ptolemy II 10.0</i>)
<li> <a href="../../domains/continuous/demo/LevelCrossingDetectorDetectsGlitches/LevelCrossingDetectorDetectsGlitches.xml">Level Crossing Detector Detects Glitches</a>
<li> <a href="../../domains/continuous/demo/LevelCrossingDetector/LevelCrossingDetectorDetectingDirections.xml">Level Crossing Detector with Different Detecting Directions</a>
<li> <a href="../../domains/continuous/demo/NewtonsCradle/NewtonsCradle.xml">Newton's Cradle</a>
<li> <a href="../../domains/continuous/demo/NewtonsCradle/NewtonsCradleComplicated.xml">Newton's Cradle with Complicated Dynamics</a>
<li> <a href="../../domains/continuous/demo/NewtonsCradle/NewtonsCradleNondeterministic.xml">Newton's Cradle with Nondeterministic State Macine</a>
<li> <a href="../../domains/continuous/demo/Poisson/Poisson.xml">Poisson</a>
<li> <a href="../../domains/continuous/demo/SampledClocks/SampledClocks.xml">Sampled Clocks</a>
<li> <a href="../../domains/continuous/demo/Satellite/Satellite.xml">Satellite</a>
<li> $PTII/ptolemy/domains/ct/demo/StickyMasses/StickyMassesNewVersion.xml (<i>Removed by Ptolemy II 10.0</i>)
<li> $PTII/ptolemy/domains/ct/demo/ContinuousClock/TriggeredContinuousClock.xml (<i>Removed by Ptolemy II 10.0</i>)
<li> <a href="../../domains/continuous/demo/V2V/V2V.xml">Vehicle 2 Vehicle</a>
</ul>

<li>New Discrete Event (DE) demos:
<ul>
 <li><a href="../../domains/de/demo/AssemblyLine/AssemblyLine.xml">Assembly Line</a> 
 <li>de/demo/HierarchicalModel/HierarchicalModel.xml (<i>Removed after Ptolemy II 7.0</i>)
</ul>

<li> New Dynamic Dataflow (DDF) demos:
<ul>
 <li><a href="../../domains/ddf/demo/Eratosthenes/Eratosthenes.xml">Eratosthenes</a>
 <li><a href="../../domains/ddf/demo/Factorial/Factorial.xml">Factorial</a>
 <li><a href="../../domains/ddf/demo/HanoiTower/HanoiTower.xml">HanoiTower</a>
 <li><a href="../../domains/ddf/demo/IfThenElse/IfThenElse.xml">IfThenElse</a>
 <li><a href="../../domains/ddf/demo/Loop/Loop.xml">Loop</a>
 <li><a href="../../domains/ddf/demo/OrderedMerge/OrderedMerge.xml">OrderedMerge</a>
 <li><a href="../../domains/ddf/demo/RandomWalk/RandomWalk.xml">RandomWalk</a>
 <li><a href="../../domains/ddf/demo/RijndaelEncryption/RijndaelEncryption.xml">RijndaelEncryption</a>
</ul>

<li> New Heterochronous Dataflow (HDF) demos:
<ul>
 <li><a href="../../domains/hdf/demo/AdaptiveCoding/AdaptiveCoding.xml">AdaptiveCoding</a>
 <li><a href="../../domains/hdf/demo/Fibonacci/Fibonacci.xml">Fibonacci</a>
 <li><a href="../../domains/hdf/demo/Hysteresis/Hysteresis.xml">Hysteresis</a>
 <li><a href="../../domains/hdf/demo/Merge/Merge.xml">Merge</a>
</ul>

<li>New Giotto demos:
<ul>
<li><a href="../../domains/giotto/demo/Multimode/Multimode.xml">Multimode</a>

</ul>

<li> New Graphics (GR) demos
(requires Java 3D, see the <a href="../../domains/gr/doc/main.htm">GR domain</a>):
<ul>
<li> <a href="../../domains/gr/demo/Helen/Helen.xml">Helen</a>
<li> <a href="../../domains/gr/demo/SolarSystem/SolarSystem.xml">SolarSystem</a>
</ul>

<li> New Wireless demos:
<ul>
<li> <a href="../../domains/wireless/demo/SmartParking/SmartParking.xml">SmartParking</a>
</ul>

</ul>

<h2>
<a name="features"> Additional Features </a>
</h2>
<ul>

<li> <i>Java compatibility</i>:
<br>
Ptolemy II can be compiled under Java 1.5.0_01.  Java 1.4.2_08
is preferred though.

<br>

<li>Support changing the order of attributes, ports, etc., and
support moving objects towards the foreground or background
in the user interface. This is particularly helpful when
editing icons, since the elements of the icon can now be sent
to the background or brought to the foreground by right clicking
and selecting the appropriate option.

<br>

<li> <i>Fractional math</i>:
<br>
A new library supporting arithmetic on fractions has been created. See:
<ul>
 <li> <a href="../../../doc/codeDoc/ptolemy/math/FractionArrayMath.html#in_browser">FractionArrayMath</a>
 <li> <a href="../../../doc/codeDoc/ptolemy/math/FractionMatrixMath.html#in_browser">FractionMatrixMath</a>
</ul>

<li>Added external source (URL) option to the Instantiate Entity
command in the Graph menu.

<li> Below is a partial list of other new Java files:
  <ul>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/StateReceiver.html#in_browser">ptolemy/StateReceiver.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/TypeOpaqueCompositeActor.html#in_browser">ptolemy/actor/TypeOpaqueCompositeActor.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/gui/CompositeActorSimpleApplication.html#in_browser">ptolemy/actor/gui/CompositeActorSimpleApplication.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/gui/PasswordAttribute.html#in_browser">ptolemy/actor/gui/PasswordAttribute.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/gui/QueryUtilities.html#in_browser">ptolemy/actor/gui/QueryUtilities.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/StringConst.html#in_browser">ptolemy/actor/lib/StringConst.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/UnaryMathFunction.html#in_browser">ptolemy/actor/lib/UnaryMathFunction.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/lib/image/ImageTableau.html#in_browser">ptolemy/actor/lib/image/ImageTableau.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/actor/util/DFUtilities.html#in_browser">ptolemy/actor/util/DFUtilities.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/caltrop/actors/AbstractCalInterpreter.html#in_browser">ptolemy/caltrop/actors/AbstractCalInterpreter.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/domains/continuous/kernel/solver/ExplicitRK45Solver.html#in_browser">ptolemy/domains/continuous/kernel/solver/ExplicitRK45Solver.java</a> (<i>In Ptolemy II 8.0, the continuous domain was created.  Between Ptolemy II 8.0 and 10.0, ct was removed.  The paths to the demos has been updated from domains/ct to domains/continuous.</i>)
    <li> <a href="../../../doc/codeDoc/ptolemy/domains/modal/kernel/NonStrictFSMDirector.html#in_browser">ptolemy/domains/fsm/kernel/NonStrictFSMDirector.java</a> (<i>In Ptolemy II 8.0, the modal domain was created.  Between Ptolemy II 8.0 and 10.0, ct was removed.  The paths to the demos has been updated from domain/fsm to domains/modal.</i>)
    <li> <a href="../../../doc/codeDoc/ptolemy/kernel/util/Moveable.html#in_browser">ptolemy/kernel/util/Moveable.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/moml/filter/GRColorChanges.html#in_browser">ptolemy/moml/filter/GRColorChanges.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/vergil/kernel/attributes/AbstractTextAttribute.html#in_browser">ptolemy/vergil/kernel/attributes/AbstractTextAttribute.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/vergil/kernel/attributes/AttributeExpressionAttribute.html#in_browser">ptolemy/vergil/kernel/attributes/AttributeExpressionAttribute.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/vergil/kernel/attributes/AttributeValueAttribute.html#in_browser">ptolemy/vergil/kernel/attributes/AttributeValueAttribute.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/vergil/kernel/attributes/IDAttribute.html#in_browser">ptolemy/vergil/kernel/attributes/IDAttribute.java</a>
    <li> <a href="../../../doc/codeDoc/ptolemy/vergil/toolbox/MoveAction.html#in_browser">ptolemy/vergil/toolbox/MoveAction.java</a>
  </ul>

</ul>

<h2>
<a name="bugs"> Bug fixes </a>
</h2>
<ul>

<li>Fixed "Restore Defaults" when actors and directors
use the three argument constructor for parameters.

<li>Previously, if a class definition were to show the name
of ports, there was no way to turn this off (the attribute
_showName) could not be removed. Now, marker attributes
such as _showName are boolean valued parameters, so they
can be turned off by overriding their value.

<li>Fixed long standing bug in copy where objects are represented
in the wrong order in the exported MoML.

<li>Fixed some subtle bugs in ModalModel, where changes to
input/output status and ordering of ports were not properly
reflected in the mirror ports.

<li> A number of potential deadlocks have been fixed:
<ul>
 <li> deadlock while dragging actors during a run.
 <li> deadlocks in PN when exceptions occur in the model.
</ul>

</ul>

</ul>

</body>
</html>
